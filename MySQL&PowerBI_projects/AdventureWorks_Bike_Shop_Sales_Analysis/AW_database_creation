CREATE DATABASE adventureworks;

USE adventureworks;


-- Database Schema for Bike Store Relational Database
-- This script defines the tables and relationships for a Bike Store database.
-- Tables include information about orders, customers, products etc.

CREATE TABLE territories (
    territory_id INT PRIMARY KEY NOT NULL, -- Unique identifier for each territory
    region CHAR(20),
    country CHAR(20),
    continent CHAR(20)
);

-- Table to store information about product categories:
CREATE TABLE categories(
    category_id INT PRIMARY KEY NOT NULL, -- Unique identifier for each category
    category_name VARCHAR(50)
);

-- Table to store information about product subcategories:
CREATE TABLE product_subcategories(
    product_subcategory_id INT PRIMARY KEY NOT NULL, -- Unique identifier for each product subcategory
    subcategory_name CHAR(20),
    category_id INT NOT NULL,
    FOREIGN KEY (category_id) REFERENCES categories(category_id)
);

-- Table to store information about products:
CREATE TABLE products(
    product_id INT PRIMARY KEY NOT NULL, -- Unique identifier for each product
    product_subcategory_id INT NOT NULL,
    product_SKU VARCHAR(50),
    product_name VARCHAR(100),
    model_name VARCHAR(50),
    product_description VARCHAR(250),
    product_cost DECIMAL(10,2),
    product_price DECIMAL(10,2),
    FOREIGN KEY (product_subcategory_id) REFERENCES product_subcategories(product_subcategory_id)
);

-- Table to store information about customers:
CREATE TABLE customers( 
    customer_id INT PRIMARY KEY NOT NULL, -- Unique identifier for each customer
    prefix CHAR(4),
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    birth_date DATE,
    gender CHAR(2),
    email VARCHAR(50),
    annual_income INT,
    education_level VARCHAR(50),
    occupation VARCHAR(50)
);


-- Table to store information about returns:
CREATE TABLE returns(
    return_date DATE,
    territory_id INT NOT NULL,
    product_id INT NOT NULL,
    return_quantity INT,
    FOREIGN KEY (territory_id) REFERENCES territories(territory_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Table to store information about sales:
CREATE TABLE sales(
    order_date DATE NOT NULL,
    stock_date DATE,
    order_number CHAR(15),
    product_id INT,
    customer_id INT,
    territory_id INT,
    order_line_item CHAR(2),
    order_quantity INT,
    FOREIGN KEY (territory_id) REFERENCES territories(territory_id),
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);


	

